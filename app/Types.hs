module Types where
import Text.XML.Light (Element)

data Param = Param {
                paramName :: String,
                paramType :: String
            } deriving (Show)

data Method = Method {
                methodName :: String,
                methodReturnType :: String,
                methodIsPublic :: Bool,
                methodParameters :: [Param]
            } deriving (Show)


data ClassMember = ClassMember {
                    classMemberName :: String,
                    classMemberType :: String,
                    classMemberIsPublic :: Bool,
                    classMemberNamespace :: String
                } deriving (Show)

data Class = Class {
                className :: String,
                classAutoGenerated :: Bool,
                classBase :: String,
                classMethods :: [Method],
                classMembers :: [ClassMember]
            } deriving (Show)

data EnumMember = EnumMember {
                    enumMemberName :: String,
                    enumMemberValue :: Int
                } deriving (Show)

data Enumeration = Enumeration {
                    enumName :: String,
                    enumBase :: String,
                    enumMembers :: [EnumMember]
                } deriving (Show)

data Namespace = Namespace {
                    namespaceName :: String,
                    namespaceEnums :: [Enumeration],
                    namespaceClasses :: [Class]
                } deriving (Show)

data Include = Include {
                    includeFile :: String,
                    includeIsPublic :: Bool
                } deriving (Show)

data Package = Package {
                packageName :: String,
                packageVersion :: String,
                packageDescription :: String,
                packageIncludes :: [Include],
                packageNamespaces :: [Namespace],
                packageClasses :: [Class],
                packageEnums :: [Enumeration]
            } deriving (Show)